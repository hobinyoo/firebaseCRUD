import react, { useEffect, useState } from 'react'
import Head from 'next/head'
import { useSelector } from 'react-redux' // 스토어에서 state를 불러오기 위한 hook
import { RootState } from '../store' // 스토어에 저장된 state의 type
import { useAppDispatch } from '../store' //스토어 생성단계에서 export한 커스텀 dispatch hook
import Link from 'next/link'
import { useRouter } from 'next/router'
import { userId } from 'store/features/userSlice'
interface UserProps {
  id: string
  surname: string
  lastname: string
}
export default function Home() {
  const [name, setName] = useState<UserProps[]>([])
  const router = useRouter()

  const dispatch = useAppDispatch()

  useEffect(() => {
    fetch('http://localhost:3000/api/get-userinfo')
      .then((res) => res.json())
      .then((data) => {
        setName(data.items)
      })
      .catch((e) => {
        console.error(e)
      })
  }, [])

  const deleteUserinfo = (id: string) => {
    fetch(`http://localhost:3000/api/delete-userinfo?id=${id}`)
      .then((res) => res.json())
      .then((data) => {
        alert(data.message)
      })
      .catch((e) => {
        console.error(e)
      })

    //배열에서 삭제
    setName(name.filter((user) => user.id !== id))
  }

  const amendUserinfo = (id: string) => {
    dispatch(userId(id))
    router.push('/edit')
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <p>Get started by editing&nbsp;</p>
        <Link href="/write">글쓰기</Link>

        {name.map((item, index) => (
          <div key={index}>
            <div>
              {item.surname}
              {item.lastname}
            </div>
            <button onClick={() => deleteUserinfo(item.id)}>삭제</button>
            <button onClick={() => amendUserinfo(item.id)}>수정</button>
          </div>
        ))}
      </main>
    </>
  )
}
